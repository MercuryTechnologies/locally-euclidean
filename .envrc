# shellcheck shell=bash
source_env_if_exists .envrc.local

# If you want a Nix-provisioned dev environment (optional), then put this in `.envrc.local`:
# use flake

# For OTel configuration locally, you want to put something like this in
# `.envrc.local` and then use https://github.com/CtrlSpice/otel-desktop-viewer
# (nixpkgs#otel-desktop-viewer):
# export OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317"
# export OTEL_TRACES_EXPORTER="otlp"
# export OTEL_EXPORTER_OTLP_PROTOCOL="grpc"

# If you want to use system postgres, set DONT_PROCESS_COMPOSE and set the
# DATABASE_URL appropriately in .envrc.local.
if [[ ! -v $DONT_PROCESS_COMPOSE ]]; then
    # A pile of nonsense to make process-compose work properly and provide a postgres.
    # To use it, run `process-compose up`.
    export PGHOST=$TMPDIR/le-db
    export PGUSER=locally-euclidean
    export PGDATABASE=locally-euclidean-development
    mkdir -p "$PGHOST"
    export PC_SOCKET_DIR="$PGHOST"
    export PC_SOCKET_PATH="$PC_SOCKET_DIR/pc"
    export PC_DIR
    PC_DIR="$(git rev-parse --show-toplevel)/.pc"
    mkdir -p "$PC_DIR"
    export PGDATA="$PC_DIR/postgres"
    export PC_LOG_FILE="$PC_DIR/logs/process-compose-client.log"
    # Host part needs to be urlencoded (or at least the slashes do...)
    export DATABASE_URL="postgres:///locally-euclidean-development?host=$PGHOST"
    export LOC_EUC_DB_CONNECTION_STRING="$DATABASE_URL"
fi
